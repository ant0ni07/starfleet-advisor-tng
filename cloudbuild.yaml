steps:
# Step 1: Build the Docker image
# Builds the Docker image based on your Dockerfile in the current directory.
# The image is tagged with the project ID and service name for Artifact Registry.
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/${PROJECT_ID}/${_SERVICE_NAME}', '.']

# Step 2: Push the Docker image to Google Artifact Registry
# Pushes the newly built Docker image to the Artifact Registry.
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/${PROJECT_ID}/${_SERVICE_NAME}']

# Step 3: Deploy the image to Cloud Run
# Uses the gcloud CLI tool to deploy the container image to a Cloud Run service.
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: gcloud
  args:
  - 'run'
  - 'deploy'
  - '${_SERVICE_NAME}'          # Name of the Cloud Run service
  - '--image'
  - 'gcr.io/${PROJECT_ID}/${_SERVICE_NAME}' # Image to deploy
  - '--region'
  - '${_REGION}'                 # Google Cloud region for deployment
  - '--platform'
  - 'managed'                    # Specifies managed Cloud Run environment
  - '--allow-unauthenticated'    # Set to 'true' for public access, 'false' for private
  # Pass environment variables to the Cloud Run service at runtime.
  # Double dollar signs ($$) are used to escape Cloud Build's substitution
  # so that the actual secret values are passed as environment variables to the Cloud Run container.
  - '--set-env-vars'
  - |
    GOOGLE_API_KEY=$$GOOGLE_API_KEY,
    LANGCHAIN_TRACING_V2=true,
    LANGCHAIN_API_KEY=$$LANGSMITH_API_KEY,
    LANGCHAIN_PROJECT=${_SERVICE_NAME}
  # Declares which environment variables in this step are secret and should be masked in logs.
  secretEnv: ['GOOGLE_API_KEY', 'LANGSMITH_API_KEY']

# Specifies the Docker images that are created by this build and should be stored.
images:
- 'gcr.io/${PROJECT_ID}/${_SERVICE_NAME}'

# Defines secrets that Cloud Build should fetch from Secret Manager before the build steps execute.
# These secrets become available as environment variables for the build steps to use.
availableSecrets:
  secretManager:
  - versionName: projects/${PROJECT_ID}/secrets/google-api-key/versions/latest # Path to your Google API Key secret
    env: 'GOOGLE_API_KEY' # Environment variable name to expose the secret during the build
  - versionName: projects/${PROJECT_ID}/secrets/langsmith-api-key/versions/latest # Path to your LangSmith API Key secret
    env: 'LANGSMITH_API_KEY' # Environment variable name to expose the secret during the build

# Custom substitution variables for easy configuration.
substitutions:
  _SERVICE_NAME: starfleet-advisor-tng # Customizable: The name for your Cloud Run service
  _REGION: us-central1 # Customizable: The Google Cloud region where your service will be deployed