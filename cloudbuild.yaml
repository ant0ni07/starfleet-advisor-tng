steps:
# Step 1: Build the Docker image
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/${PROJECT_ID}/${_SERVICE_NAME}', '.']

# --- REMOVE ANY TEMPORARY DEBUG STEP FROM CLOUDBUILD.YAML NOW ---

# Step 2: Push the Docker image to Google Artifact Registry
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/${PROJECT_ID}/${_SERVICE_NAME}']

# Step 3: Deploy the image to Cloud Run
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: gcloud
  args:
  - 'run'
  - 'deploy'
  - '${_SERVICE_NAME}'
  - '--image'
  - 'gcr.io/${PROJECT_ID}/${_SERVICE_NAME}'
  - '--region'
  - '${_REGION}'
  - '--platform'
  - 'managed'
  - '--allow-unauthenticated'
  # --- CRITICAL FIX FOR ENVIRONMENT VARIABLES (Each on its own line, with its own --set-env-vars flag) ---
  - '--set-env-vars=GOOGLE_API_KEY=$$GOOGLE_API_KEY'
  - '--set-env-vars=LANGCHAIN_TRACING_V2=true'
  - '--set-env-vars=LANGCHAIN_API_KEY=$$LANGSMITH_API_KEY'
  - '--set-env-vars=LANGCHAIN_PROJECT=${_SERVICE_NAME}'
  # --- END CRITICAL FIX ---
  secretEnv: ['GOOGLE_API_KEY', 'LANGSMITH_API_KEY'] # Necessary for Cloud Build to mask in its logs

# Specifies the Docker images that are created by this build and should be stored.
images:
- 'gcr.io/${PROJECT_ID}/${_SERVICE_NAME}'

# Defines secrets that Cloud Build should fetch from Secret Manager.
availableSecrets:
  secretManager:
  - versionName: projects/${PROJECT_ID}/secrets/google-api-key/versions/latest
    env: 'GOOGLE_API_KEY'
  - versionName: projects/${PROJECT_ID}/secrets/langsmith-api-key/versions/latest
    env: 'LANGSMITH_API_KEY'

# Custom substitution variables for easy configuration.
substitutions:
  _SERVICE_NAME: starfleet-advisor-tng
  _REGION: us-central1